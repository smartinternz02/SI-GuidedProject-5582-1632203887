# -*- coding: utf-8 -*-
"""Assignment-4_CNN.ipynb
Author: Logeswaran K
Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VE5qVopz0YFl662dec0narZURCUaSgWr
"""

import numpy as np
import pandas as pd
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.layers import Convolution2D
from tensorflow.keras.layers import MaxPooling2D
from tensorflow.keras.layers import Flatten

from keras.preprocessing.image import ImageDataGenerator

train_datagen=ImageDataGenerator(rescale=1./255, shear_range=0.2, zoom_range=0.2, horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255)

from google.colab import drive
drive.mount('/content/drive')

"""Dataset Description:

*  Actual dataset contains 70 Dog Breeds-Image Data Set(70 classes)
*   As per given assignment problem, only 8 dog breeds (8 classes) are considered for implementation

*   8 class includes
  > Afghan

  > African Wild Dog

  > Airedale

  > American Hairless

  > American Spaniel

  > Basenji

  > Basset

  > Beagle



"""

x_train=train_datagen.flow_from_directory("/content/drive/MyDrive/AI/Training/SmartBridge/Notes/Dataset/CNN/70 Dog Breeds/8-classes/train", target_size=(64,64), batch_size=32, class_mode="categorical")

x_test=train_datagen.flow_from_directory("/content/drive/MyDrive/AI/Training/SmartBridge/Notes/Dataset/CNN/70 Dog Breeds/8-classes/test", target_size=(64,64), batch_size=32, class_mode="categorical")

#to print class present
print(x_train.class_indices)

model=Sequential()

#dding convolution layer(no.of filters,filter size,input shape,activation function)
model.add(Convolution2D(32,(3,3), input_shape=(64,64,3), activation="relu"))

#adding max pooling layer(pool_size)
model.add(MaxPooling2D(pool_size=(2,2)))

#adding flatten layer(input layer)
model.add(Flatten())

#add hidden layer(no.of neurons,activation=relu,weights)
model.add(Dense(units=128,activation="relu"))

#add output layer(no.of output classes=5,activation function=softmax)
model.add(Dense(units=8,activation="softmax"))

model.summary()

#configure the learning process(loss fucntion,accuracy,optimizer)
model.compile(loss="categorical_crossentropy", optimizer="adam",metrics=["accuracy"])

model.fit(x_train,steps_per_epoch=27,epochs=20, validation_data=x_test, validation_steps=3)

# steps_per_epoch=no.of images in train data/batch_size
#866/32=27.062=27
# validation steps=no.of images in test data/batch _size
#80/32=2.5=3

model.save("/content/drive/MyDrive/AI/Training/SmartBridge/Assignment/Assignment-4/dog_breed.h5")

from tensorflow.keras.models import load_model
#from tensorflow.keras.models import Sequential
from keras.preprocessing import image
import numpy as np

mymodel=load_model(r"/content/drive/MyDrive/AI/Training/SmartBridge/Assignment/Assignment-4/dog_breed.h5")
img=image.load_img(r"/content/drive/MyDrive/AI/Training/SmartBridge/Notes/Dataset/CNN/70 Dog Breeds/8-classes/validate/Afghan/05.jpg",target_size=(64,64))
img

xx1=image.img_to_array(img)

xx1.shape

xx2=np.expand_dims(xx1,axis=0)

xx2.shape

#pred=mymodel.predict_class(xx2)
pred=np.argmax(mymodel)
pred

y=mymodel.predict(xx2)
pred=np.argmax(y,axis=1)
pred

print(x_train.class_indices )

index=['Afghan','African Wild Dog','Airedale','American Hairless','American Spaniel','Basenji','Basset','Beagle']
result=str(index[pred[0]])
result

mymodel=load_model(r"/content/drive/MyDrive/AI/Training/SmartBridge/Assignment/Assignment-4/dog_breed.h5")
img=image.load_img(r"/content/drive/MyDrive/AI/Training/SmartBridge/Notes/Dataset/CNN/70 Dog Breeds/8-classes/validate/Basset/06.jpg",target_size=(64,64))
img

xx1=image.img_to_array(img)
xx2=np.expand_dims(xx1,axis=0)
xx2.shape

y=mymodel.predict(xx2)
pred=np.argmax(y,axis=1)
pred

index=['Afghan','African Wild Dog','Airedale','American Hairless','American Spaniel','Basenji','Basset','Beagle']
result=str(index[pred[0]])
result
