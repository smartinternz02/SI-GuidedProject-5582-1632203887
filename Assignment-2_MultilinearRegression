# -*- coding: utf-8 -*-
"""MultiLinear Regression_Practice-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NKblgrf38H9rOltlXr8OOqh0iw1opUbw
"""

import numpy as np
import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

dataset = pd.read_csv("/content/drive/MyDrive/AI/Training/Notes/Dataset/BigMart Sales Prediction_Train.csv")

dataset.head(10)

dataset.isnull().any()

dataset.isnull().sum()

dataset["Item_Weight"].fillna(dataset["Item_Weight"].mean(),inplace = True)

dataset["Outlet_Size"].fillna(dataset["Outlet_Size"].mode()[0],inplace=True)

dataset.isnull().sum()

dataset.head(10)









dataset["Item_Fat_Content"].unique()

dataset["Item_Fat_Content"].replace(to_replace="LF",value="Low Fat",inplace=True)

dataset["Item_Fat_Content"].unique()

dataset["Item_Fat_Content"].replace(to_replace="low fat",value="Low Fat",inplace=True)
dataset["Item_Fat_Content"].replace(to_replace="reg",value="Regular",inplace=True)

dataset["Item_Fat_Content"].unique()

dataset["Item_Type"].unique()

dataset["Outlet_Size"].unique()

dataset["Outlet_Location_Type"].unique()

dataset["Outlet_Type"].unique()

x = dataset.iloc[:,[1,2,3,4,5,8,10]].values
x.shape
x

y=dataset.iloc[:,11:12].values
y.shape

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

ct = ColumnTransformer([("one",OneHotEncoder(),[1,3,5,6])],remainder = "passthrough")

x_ct = ct.fit_transform(x)

x_ct.shape

y.shape

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x_ct,y,test_size=0.2,random_state = 0)
print(x_ct.shape,x_train.shape,x_test.shape)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler(with_mean=False)
x_train_sc = sc.fit_transform(x_train)
x_test_sc = sc.transform(x_test)

from sklearn.linear_model import LinearRegression
mlr = LinearRegression()
mlr.fit(x_train_sc,y_train)

y_pred = mlr.predict(x_test_sc)

y_pred[1:10]

y_test[1:10]

from sklearn.metrics import r2_score
accuracy = r2_score(y_pred,y_test)
print("Accuracy:",accuracy)

