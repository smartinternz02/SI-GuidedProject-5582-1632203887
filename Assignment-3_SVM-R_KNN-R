# -*- coding: utf-8 -*-
"""Assignment_3   SVM-R and KNN -R.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n4ZShJTPL3N46hYCQDDeiPsLMq81Mv26
"""

from google.colab import drive
drive.mount('/content/drive/')



import numpy as np
import pandas as pd
dataset=pd.read_csv('/content/drive/MyDrive/AI/Training/SmartBridge/Assignment/Asignment-3/Real estate valuation data set.csv')

dataset.isnull().sum()



import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
#below is used to load dataset in jupyter 
#dataset=pd.read_csv(r"D:\SmartBridge\daasets\Social_Network_Ads.csv")

dataset.head()

import seaborn as sns
sns.heatmap(dataset.corr(),annot=True)

#slpitting dependant and indpendent variables
dataset.head()

x=dataset.iloc[:,1:7].values
y=dataset.iloc[:,7:8].values

x.shape

x

y.shape

y

#Feature scaling
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x)
x_train

#train test split
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)

#Model building start
from sklearn.svm import SVR
svr=SVR()
svr.fit(x_train,y_train)

y_pred=svr.predict(x_test)

y_pred

y_test

from sklearn.metrics import r2_score
accuracy=r2_score(y_test,y_pred)
print("Accuracy:",accuracy*100,"%")

from sklearn.neighbors import KNeighborsRegressor
knn=KNeighborsRegressor()
knn.fit(x_train,y_train)

y_pred=knn.predict(x_test)

y_pred[0:10]

y_test[0:10]

from sklearn.metrics import r2_score
accuracy=r2_score(y_test,y_pred)
print("Accuracy:",accuracy*100,"%")

